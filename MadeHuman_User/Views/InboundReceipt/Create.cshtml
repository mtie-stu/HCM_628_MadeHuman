@model Madehuman_Share.ViewModel.Inbound.InboundReceipt.CreateInboundReceiptViewModel

@{
    ViewData["Title"] = "Tạo phiếu nhập kho";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="~/css/pages/InboundReceipt/inbound-receipt-create.css" asp-append-version="true" />

<div class="inbound-page container mt-4">

    <!-- Header -->
    <div class="page-head mb-2">
        <div>
            <h2 class="page-title"><i class="bi bi-box-arrow-in-down"></i> Tạo phiếu nhập kho</h2>
            <div class="page-subtext">Nhập thông tin phiếu và các dòng sản phẩm</div>
        </div>
        <div class="toolbar">
            <a asp-action="Index" class="btn btn-outline">
                <i class="bi bi-arrow-left"></i> Hủy
            </a>
        </div>
    </div>

    <div class="form-card">
        <form asp-action="Create" method="post" id="inboundCreateForm">
            @Html.AntiForgeryToken()

            <div class="row g-3">
                <div class="col-md-4">
                    <label asp-for="CreateAt" class="form-label fw-bold">Ngày tạo</label>
                    <input asp-for="CreateAt" class="form-control" readonly />
                    <span asp-validation-for="CreateAt" class="text-danger small"></span>
                </div>

                <div class="col-md-4">
                    <label asp-for="ReceivedAt" class="form-label fw-bold">Ngày nhận</label>
                    <input asp-for="ReceivedAt" class="form-control" type="date" />
                    <span asp-validation-for="ReceivedAt" class="text-danger small"></span>
                </div>
            </div>

            <hr class="my-4" />

            <div class="d-flex justify-content-between align-items-center mb-2">
                <h5 class="m-0"><i class="bi bi-box-seam"></i> Danh sách sản phẩm nhập</h5>
                <button type="button" id="add-item" class="btn btn-outline">
                    <i class="bi bi-plus-circle"></i> Thêm dòng
                </button>
            </div>

            <div id="items-container" class="table-wrap">
                <table class="table mb-0">
                    <thead>
                        <tr>
                            <th style="width:60%;">ProductSKUId</th>
                            <th style="width:25%;">Số lượng</th>
                            <th style="width:15%; text-align:right;">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="items-tbody">
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <tr class="item-row">
                                <td>
                                    <input asp-for="Items[@i].ProductSKUId" class="form-control" />
                                    <span asp-validation-for="Items[@i].ProductSKUId" class="text-danger small"></span>
                                </td>
                                <td>
                                    <input asp-for="Items[@i].Quantity" class="form-control" type="number" min="1" step="1" />
                                    <span asp-validation-for="Items[@i].Quantity" class="text-danger small"></span>
                                </td>
                                <td class="text-end">
                                    <button type="button" class="btn btn-danger-soft remove-item">
                                        <i class="bi bi-trash"></i> Xoá
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="mt-4 d-flex gap-2">
                <button type="submit" class="btn btn-orange">
                    <i class="bi bi-save"></i> Tạo phiếu nhập
                </button>
                <a asp-action="Index" class="btn btn-outline">
                    <i class="bi bi-x-circle"></i> Hủy
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            const tbody = document.getElementById('items-tbody');
            const addBtn = document.getElementById('add-item');

            addBtn.addEventListener('click', () => {
                const index = tbody.querySelectorAll('.item-row').length;
                const tr = document.createElement('tr');
                tr.className = 'item-row';
                tr.innerHTML = `
                    <td>
                        <input name="Items[${index}].ProductSKUId" class="form-control" />
                        <span data-valmsg-for="Items[${index}].ProductSKUId" class="text-danger small"></span>
                    </td>
                    <td>
                        <input name="Items[${index}].Quantity" class="form-control" type="number" min="1" step="1" />
                        <span data-valmsg-for="Items[${index}].Quantity" class="text-danger small"></span>
                    </td>
                    <td class="text-end">
                        <button type="button" class="btn btn-danger-soft remove-item">
                            <i class="bi bi-trash"></i> Xoá
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });

            document.addEventListener('click', (e) => {
                if (e.target.closest('.remove-item')) {
                    const row = e.target.closest('.item-row');
                    row?.remove();
                    reindexRows();
                }
            });

            function reindexRows() {
                const rows = tbody.querySelectorAll('.item-row');
                rows.forEach((row, i) => {
                    row.querySelectorAll('input').forEach(inp => {
                        const name = inp.getAttribute('name');
                        if (!name) return;
                        const newName = name.replace(/Items\[\d+\]/, `Items[${i}]`);
                        inp.setAttribute('name', newName);
                        const parent = inp.parentElement;
                        const span = parent.querySelector('[data-valmsg-for]');
                        if (span) span.setAttribute('data-valmsg-for', newName);
                    });
                });
            }
        })();
    </script>
}
