@model Madehuman_Share.ViewModel.PagedResult<Madehuman_Share.ViewModel.Inbound.InboundTaskViewModel>

@{
    ViewData["Title"] = "Danh sách Inbound Tasks";

    var total = Model.TotalItems;        // tổng sau lọc
    var completed = Model.TotalCompleted;    // đã hoàn thành sau lọc
    var pending = Model.TotalIncomplete;   // đang xử lý sau lọc

    string currentStatus = Model.Status ?? "";
    string currentSearch = Model.Q ?? "";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="~/css/pages/Inbound/inbound-index.css" asp-append-version="true" />

<div class="inbound-page">
    <div class="container mt-4">

        <!-- Header / Banner -->
        <div class="page-head">
            <div>
                <h2 class="page-title"><i class="bi bi-truck"></i> Danh sách Inbound Tasks</h2>
                <div class="page-subtext">Theo dõi & xử lý nhiệm vụ nhập kho một cách nhanh chóng.</div>
            </div>

            <div class="toolbar">
                <form id="filterForm" method="get" action="@Url.Action("Index","Inbound")" class="filter-row" role="search" aria-label="Bộ lọc danh sách inbound">
                    <div class="input-search with-icon">
                        <i class="bi bi-search"></i>
                        <input id="searchBox"
                               name="searchTerm"
                               class="form-control"
                               placeholder="Tìm theo ID hoặc người tạo…"
                               value="@currentSearch"
                               aria-label="Từ khoá tìm kiếm" />
                    </div>

                    <select id="statusFilter" name="status" class="form-select" aria-label="Trạng thái">
                        @if (string.IsNullOrEmpty(currentStatus))
                        {
                            <option value="" selected>Tất cả</option>
                        }
                        else
                        {
                            <option value="">Tất cả</option>
                        }

                        @if (currentStatus == "Incomplete")
                        {
                            <option value="Incomplete" selected>Đang xử lý</option>
                        }
                        else
                        {
                            <option value="Incomplete">Đang xử lý</option>
                        }

                        @if (currentStatus == "Completed")
                        {
                            <option value="Completed" selected>Đã hoàn thành</option>
                        }
                        else
                        {
                            <option value="Completed">Đã hoàn thành</option>
                        }
                    </select>

                    <!-- Reset về trang 1 mỗi lần lọc -->
                    <input type="hidden" id="pageInput" name="page" value="@Model.CurrentPage" />
                    <input type="hidden" name="pageSize" value="@Model.PageSize" />

                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel"></i> Lọc
                    </button>

                    <a id="btnClear" href="@Url.Action("Index","Inbound")" class="btn btn-outline">
                        <i class="bi bi-eraser"></i> Xoá lọc
                    </a>
                </form>
            </div>
        </div>

        <!-- Stats -->
        <div class="stat-grid">
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-collection"></i></div>
                <div class="stat-meta">
                    <div class="label">Tổng nhiệm vụ</div>
                    <div class="value">@total</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-hourglass-split"></i></div>
                <div class="stat-meta">
                    <div class="label">Đang xử lý</div>
                    <div class="value">@pending</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-check2-circle"></i></div>
                <div class="stat-meta">
                    <div class="label">Đã hoàn thành</div>
                    <div class="value">@completed</div>
                </div>
            </div>
        </div>

        @if (total == 0)
        {
            <div class="alert alert-warning">
                <i class="bi bi-info-circle"></i> Chưa có nhiệm vụ nào theo bộ lọc hiện tại.
            </div>
        }
        else
        {
            <div class="table-wrap card shadow-sm">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0" id="taskTable">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Người tạo</th>
                                <th>Ngày tạo</th>
                                <th>Trạng thái</th>
@*                                 <th class="text-end">Thao tác</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.Items.OrderByDescending(x => x.CreateAt))
                            {
                                var isCompleted = string.Equals(task.Status, "Completed", StringComparison.OrdinalIgnoreCase);
                                var badge = isCompleted ? "text-bg-success" : "text-bg-warning";
                                <tr>
                                    <td><span class="id-chip">@task.Id</span></td>
                                    <td>@(string.IsNullOrWhiteSpace(task.CreateBy) ? "—" : task.CreateBy)</td>
                                    <td>@task.CreateAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td><span class="badge @badge">@task.Status</span></td>
                                    @* <td class="text-end">
                                        <a asp-controller="Inbound"
                                           asp-action="ValidateScan"
                                           asp-route-inboundTaskId="@task.Id"
                                           class="btn btn-orange btn-sm btn-validate @(isCompleted ? "disabled" : "")"
                                           aria-disabled="@(isCompleted ? "true" : null)"
                                           tabindex="@(isCompleted ? "-1" : null)"
                                           title="Mở trang quét xác nhận">
                                            <i class="bi bi-upc-scan me-1"></i>
                                            <span>Validate Scan</span>
                                        </a>
                                    </td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Pagination -->
            <div class="mt-3 d-flex justify-content-center">
                @Html.Raw(ViewBag.Pagination)
            </div>
        }
    </div>

    <div id="inlineAlert" class="inline-alert d-none"></div>
</div>

@section Scripts {
    <script>
        (function(){
          const $ = (s,c=document)=>c.querySelector(s);

          const form      = $('#filterForm');
          const statusSel = $('#statusFilter');
          const searchBox = $('#searchBox');
          const pageInput = $('#pageInput');
          const toast     = $('#inlineAlert');

          // Toast mini
          function showToast(type, text){
            if (!toast) return;
            toast.className = 'inline-alert ' + (type==='success'?'success':'error');
            toast.textContent = text;
            toast.classList.remove('d-none');
            requestAnimationFrame(()=> toast.classList.add('show'));
            setTimeout(()=>{ toast.classList.remove('show'); setTimeout(()=> toast.classList.add('d-none'), 160); }, 1800);
          }

          // Auto-submit khi đổi status, reset page về 1
          statusSel?.addEventListener('change', ()=>{
            if (pageInput) pageInput.value = '1';
            form?.submit();
          });

          // Enter trong ô tìm kiếm → submit & reset về 1
          searchBox?.addEventListener('keydown', (e)=>{
            if (e.key === 'Enter'){
              e.preventDefault();
              if (pageInput) pageInput.value = '1';
              form?.submit();
            }
          });

          // UX: click ValidateScan -> spinner & chặn double click; Completed thì báo
          document.addEventListener('click', function(e){
            const a = e.target.closest('.btn-validate');
            if (!a) return;

            if (a.getAttribute('aria-disabled') === 'true'){
              e.preventDefault();
              showToast('error','Nhiệm vụ đã hoàn thành.');
              return;
            }

            // spinner inline theo CSS .btn-validate.loading
            a.classList.add('loading');
            a.setAttribute('aria-disabled','true');
          });
        })();
    </script>
}
