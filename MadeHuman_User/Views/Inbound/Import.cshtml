@model Madehuman_Share.ViewModel.Inbound.CreateInboundTaskViewModel

@{
    ViewData["Title"] = "Tạo nhiệm vụ nhập kho";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="~/css/pages/Inbound/inbound-create.css" asp-append-version="true" />

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="inbound-create-page">
    <div class="container mt-4">

        <!-- Header banner -->
        <div class="page-head">
            <div>
                <h2 class="page-title">
                    <i class="bi bi-inboxes"></i> Tạo nhiệm vụ nhập kho
                </h2>
                <div class="page-subtext">Nhập mã phiếu, xem trước chi tiết và xác nhận tạo nhiệm vụ.</div>
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-body">

                @* Alerts từ server *@
                @if (ViewBag.Success != null)
                {
                    <div class="alert alert-success d-flex align-items-center">
                        <i class="bi bi-check-circle-fill me-2"></i>
                        <div>@ViewBag.Success</div>
                    </div>
                }
                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger d-flex align-items-center">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        <div>@ViewBag.Error</div>
                    </div>
                }

                <form asp-action="Import" method="post" id="scanForm">
                    <!-- Nhập mã phiếu -->
                    <div class="row g-3 align-items-end">
                        <div class="col-md-8">
                            <label class="form-label fw-semibold">Mã phiếu nhập</label>
                            <div class="with-icon">
                                <i class="bi bi-upc-scan"></i>
                                <input id="receiptIdInput"
                                       class="form-control"
                                       name="receiptId"
                                       placeholder="Nhập mã phiếu (GUID) hoặc quét mã..."
                                       autocomplete="off"
                                       required />
                            </div>
                            <div class="form-hint">Mẹo: dán/scan <strong>GUID</strong> của phiếu nhập để tự động tải thông tin.</div>
                        </div>

                        <div class="col-md-4 d-grid">
                            <button type="button" id="btnLoad" class="btn btn-outline">
                                <i class="bi bi-search me-1"></i>Tải thông tin phiếu
                            </button>
                        </div>
                    </div>

                    <!-- Skeleton / Info card -->
                    <div id="receiptBlock" class="mt-3">
                        <!-- Skeleton khi loading -->
                        <div id="receiptSkeleton" class="skeleton-card d-none">
                            <div class="sk-head"></div>
                            <div class="sk-line"></div>
                            <div class="sk-line w-60"></div>
                            <div class="sk-line"></div>
                            <div class="sk-list mt-2">
                                <div class="sk-item"></div>
                                <div class="sk-item"></div>
                                <div class="sk-item"></div>
                            </div>
                        </div>

                        <!-- Thông tin phiếu nhập -->
                        <div id="receiptInfo" class="card mt-3 border-0 d-none">
                            <div class="card-header info-head">
                                <h6 class="mb-0"><i class="bi bi-receipt me-1"></i>Thông tin phiếu nhập</h6>
                            </div>
                            <div class="card-body">
                                <div class="meta-grid">
                                    <div class="meta-item">
                                        <div class="meta-label">Ngày tạo</div>
                                        <div id="createAt" class="meta-value">--</div>
                                    </div>
                                    <div class="meta-item">
                                        <div class="meta-label">Ngày nhận</div>
                                        <div id="receivedAt" class="meta-value">--</div>
                                    </div>
                                    <div class="meta-item">
                                        <div class="meta-label">Trạng thái</div>
                                        <div id="status" class="badge status-badge">--</div>
                                    </div>
                                    <div class="meta-item">
                                        <div class="meta-label">Số SP</div>
                                        <div id="itemCount" class="badge count-badge">0</div>
                                    </div>
                                </div>

                                <div class="mt-3">
                                    <div class="section-title"><i class="bi bi-box-seam me-1"></i>Danh sách sản phẩm</div>
                                    <ul id="receiptItemsList" class="list-group list-group-flush receipt-list"></ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Submit -->
                    <div class="text-end mt-4">
                        <button type="submit" class="btn btn-orange" id="btnSubmit" disabled>
                            <i class="bi bi-send-check me-1"></i><span class="btn-text">Xác nhận tạo nhiệm vụ</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Toast -->
    <div id="inlineAlert" class="inline-alert d-none" role="status" aria-live="polite"></div>
</div>

@section Scripts {
<script>
(function () {
  // ----- helpers: lấy key BẤT CHẤP hoa/thường -----
  const qs = sel => document.querySelector(sel);
  function getAny(obj, names) {
    if (!obj) return undefined;
    const map = {};
    for (const k of Object.keys(obj)) map[k.toLowerCase()] = obj[k];
    for (const n of names) {
      const v = map[String(n).toLowerCase()];
      if (v !== undefined && v !== null && v !== "") return v;
    }
    return undefined;
  }
  function guidLike(s){
    const g=/^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$/;
    return g.test(s)||String(s).length>=20;
  }
  function isMeaningfulDate(dt){
    try{ const d=new Date(dt); return !isNaN(d)&&d.getFullYear()>2001; }catch{ return false; }
  }
  function showToast(type, text){
    const toast = qs('#inlineAlert');
    toast.className = 'inline-alert ' + (type==='success'?'success':'error');
    toast.textContent = text;
    toast.classList.remove('d-none');
    requestAnimationFrame(()=> toast.classList.add('show'));
    setTimeout(()=>{ toast.classList.remove('show'); setTimeout(()=> toast.classList.add('d-none'),180); },2200);
  }
  function setLoading(yes){
    const sk = qs('#receiptSkeleton'), info = qs('#receiptInfo'), btn = qs('#btnSubmit');
    if(yes){ sk.classList.remove('d-none'); info.classList.add('d-none'); btn.disabled = true; }
    else sk.classList.add('d-none');
  }
  function mapStatusBadge(status){
    const el = qs('#status');
    el.classList.add('status-badge');
    if (status === 'Received') el.style.setProperty('--sb-bg','#10b981');
    else if (['Created','Pending','Confirmed'].includes(status||'')) el.style.setProperty('--sb-bg','#f59e0b');
    else el.style.setProperty('--sb-bg','#9ca3af');
    el.textContent = status || '--';
  }

  // ----- elements -----
  const receiptInput = qs('#receiptIdInput');
  const btnLoad      = qs('#btnLoad');
  const btnSubmit    = qs('#btnSubmit');
  const receiptInfo  = qs('#receiptInfo');
  const itemsList    = qs('#receiptItemsList');
  let debounce;

  // ----- fill UI -----
  function fillReceipt(data){
    const createAt   = getAny(data,['createAt','CreateAt']);
    const receivedAt = getAny(data,['receivedAt','ReceivedAt']);
    const status     = getAny(data,['status','Status']);
    const items      = getAny(data,['items','Items']) || [];

    qs('#createAt').textContent  = isMeaningfulDate(createAt) ? new Date(createAt).toLocaleString() : '--';
    qs('#receivedAt').textContent= isMeaningfulDate(receivedAt) ? new Date(receivedAt).toLocaleDateString() : 'Chưa nhận';
    mapStatusBadge(status);
    qs('#itemCount').textContent = items.length;

    itemsList.innerHTML = '';
    items.forEach((item, idx) => {
      // Lấy tên SKU & fallback
      const skuName = getAny(item, ['productSKUName','ProductSKUName','productSkuName','skuName','SKU','sku']);
      const skuId   = getAny(item, ['productSKUId','ProductSKUId','skuId','SkuId']);
      const qty     = getAny(item, ['quantity','Quantity']) ?? '';

      // debug (xóa nếu không cần)
      console.debug('Item', idx, { skuName, skuId, item });

      const li = document.createElement('li');
      li.className = 'list-group-item d-flex justify-content-between align-items-center';
      li.innerHTML = `
        <div class="sku-wrap">
          <span class="sku-chip"><i class="bi bi-upc"></i>${skuName || '(Không có tên)'}</span>
          ${skuId ? `<div class="sku-id">ID: ${skuId}</div>` : ''}
        </div>
        <span class="qty-chip">${qty}</span>
      `;
      itemsList.appendChild(li);
    });

    receiptInfo.classList.remove('d-none');
    btnSubmit.disabled = false;
    receiptInput.readOnly = true;
  }

  // ----- load API -----
  function loadReceipt(){
    const id = receiptInput.value.trim();
    if (!id || !guidLike(id)){
      showToast('error','⚠️ Mã phiếu không hợp lệ. Vui lòng kiểm tra lại.');
      return;
    }
    setLoading(true);

    // getJSON đảm bảo data là JSON
    jQuery.getJSON(`https://hcm-628-madehuman-api.onrender.com/api/InboundReceipt/${id}`)
      .done(function (data) {
        setLoading(false);
        fillReceipt(data);
        showToast('success','✅ Đã tải thông tin phiếu nhập.');
      })
      .fail(function (xhr) {
        setLoading(false);
        receiptInfo.classList.add('d-none');
        btnSubmit.disabled = true;
        receiptInput.readOnly = false;
        showToast('error', xhr.status === 404 ? '❌ Không tìm thấy phiếu nhập.' : '🚨 Lỗi tải dữ liệu.');
      });
  }

  // ----- events -----
  btnLoad?.addEventListener('click', loadReceipt);

  receiptInput.addEventListener('input', function(){
    clearTimeout(debounce);
    const val = this.value.trim();
    receiptInfo.classList.add('d-none');
    btnSubmit.disabled = true;
    receiptInput.readOnly = false;
    if (!val || val.length < 10) return;
    debounce = setTimeout(loadReceipt, 500);
  });

  document.querySelector('#scanForm').addEventListener('submit', function(e){
    if (btnSubmit.disabled){
      e.preventDefault();
      showToast('error','⚠️ Vui lòng tải thông tin phiếu trước.');
      return;
    }
    btnSubmit.disabled = true;
    btnSubmit.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang tạo nhiệm vụ...';
  });
})();
</script>
}
