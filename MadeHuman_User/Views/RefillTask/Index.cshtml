@using Madehuman_Share.ViewModel.Inbound
@model Madehuman_Share.ViewModel.PagedResult<RefillTaskFullViewModel>

@{
    ViewData["Title"] = "Refill";

    var total = (int)(ViewBag.TaskTotal ?? 0);
    var completed = (int)(ViewBag.TaskCompleted ?? 0);
    var canceled = (int)(ViewBag.TaskCanceled ?? 0);
    var processing = (int)(ViewBag.TaskProcessing ?? 0);
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/css/pages/Refill/refill-index.css" asp-append-version="true" />

<div class="refill-page">
    <div class="container mt-4">

        <!-- Header actions -->
        <div class="d-flex gap-2">
            <button type="button" class="btn btn-orange" id="assignTaskBtn">
                <i class="bi bi-person-check me-1"></i> Nhận nhiệm vụ
            </button>
            <a class="btn btn-outline" asp-action="Create">
                <i class="bi bi-plus-circle me-1"></i> Tạo nhiệm vụ
            </a>
        </div>

        <!-- Anti-forgery (nếu action có [ValidateAntiForgeryToken]) -->
        <form id="assignAfForm" class="d-none">
            @Html.AntiForgeryToken()
        </form>

        <!-- Stat cards -->
        <div class="stat-grid mt-3">
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-collection"></i></div>
                <div class="stat-meta">
                    <div class="label">Tổng số nhiệm vụ</div>
                    <div class="value">@total</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-check2-circle"></i></div>
                <div class="stat-meta">
                    <div class="label">Đã hoàn thành</div>
                    <div class="value">@completed</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-slash-circle"></i></div>
                <div class="stat-meta">
                    <div class="label">Đã huỷ</div>
                    <div class="value">@canceled</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-ico"><i class="bi bi-hourglass-split"></i></div>
                <div class="stat-meta">
                    <div class="label">Đang xử lý</div>
                    <div class="value">@processing</div>
                </div>
            </div>
        </div>

        @if (!Model.Items.Any())
        {
            <div class="alert alert-warning mt-3">
                <i class="bi bi-exclamation-triangle"></i> Không có nhiệm vụ đang xử lý.
            </div>
        }
        else
        {
            <div class="accordion mt-3" id="refillTaskAccordion">
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    var task = Model.Items[i];

                    <div class="accordion-item mb-2">
                        <h2 class="accordion-header" id="heading-@i">
                            <button class="accordion-button collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#collapse-@i"
                                    aria-expanded="false" aria-controls="collapse-@i">
                                <i class="bi bi-clipboard-check"></i>
                                <span class="ms-2">Mã: <span class="task-id">@task.Id</span></span>
                                <span class="ms-3 text-muted"><i class="bi bi-clock"></i> @task.CreateAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </button>
                        </h2>

                        <div id="collapse-@i" class="accordion-collapse collapse" aria-labelledby="heading-@i" data-bs-parent="#refillTaskAccordion">
                            <div class="accordion-body">
                                <h6 class="mb-3 text-secondary"><i class="bi bi-list-ul"></i> Danh sách chi tiết</h6>

                                <div class="table-responsive">
                                    <table class="table table-bordered table-sm align-middle mb-0">
                                        <thead class="table-light">
                                            <tr class="text-center">
                                                <th class="th-muted"><i class="bi bi-box-arrow-in-left"></i> From</th>
                                                <th class="th-muted"><i class="bi bi-box-arrow-right"></i> To</th>
                                                <th class="th-muted"><i class="bi bi-hash"></i> Số lượng</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var d in task.Details)
                                            {
                                                <tr>
                                                    <td><span class="loc-chip"><i class="bi bi-geo-alt"></i> @d.FromLocation</span></td>
                                                    <td><span class="loc-chip"><i class="bi bi-geo"></i> @d.ToLocation</span></td>
                                                    <td>@d.Quantity</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="mt-3 text-end">
                                    <a class="btn btn-outline btn-sm" asp-action="Details" asp-route-id="@task.Id">
                                        <i class="bi bi-eye"></i> Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            <div class="mt-3 d-flex justify-content-center">
                @Html.Raw(ViewBag.Pagination)
            </div>
        }
    </div>

    <!-- Inline alert -->
    <div id="inlineAlert" class="inline-alert d-none"></div>
</div> <!-- /.refill-page -->
@section Scripts {
    <script>
        (function(){
          const $btn   = document.getElementById('assignTaskBtn');
          const $alert = document.getElementById('inlineAlert');

          function showInlineAlert(type, text){
            $alert.className = 'inline-alert ' + (type === 'success' ? 'success' : 'error');
            $alert.textContent = text;
            $alert.classList.remove('d-none');
            requestAnimationFrame(()=> $alert.classList.add('show'));
            setTimeout(()=>{ $alert.classList.remove('show'); setTimeout(()=> $alert.classList.add('d-none'), 200); }, 2200);
          }

          function getAfToken(){
            const el = document.querySelector('#assignAfForm input[name="__RequestVerificationToken"]');
            return el ? el.value : '';
          }

          async function assignTask(){
            $btn.disabled = true;
            const oldHtml = $btn.innerHTML;
            $btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang nhận...';

            try{
              const resp = await fetch('/RefillTask/Assign', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'RequestVerificationToken': getAfToken() // nếu controller có [ValidateAntiForgeryToken]
                },
                credentials: 'same-origin' // gửi kèm cookie JWT
              });

              const raw = await resp.text();
              let data = {};
              try { data = JSON.parse(raw || '{}'); } catch {}

              if (resp.status === 401){
                showInlineAlert('error','❌ Bạn chưa đăng nhập hoặc token đã hết hạn.');
              } else if (resp.status === 404){
                showInlineAlert('error','🎉 Không còn nhiệm vụ nào để nhận.');
              } else if (!resp.ok){
                showInlineAlert('error','🚨 Lỗi: ' + (raw || 'Yêu cầu không hợp lệ'));
              } else {
                showInlineAlert('success','✅ Đã nhận nhiệm vụ thành công!');
                const id = data?.taskId || data?.id;
                setTimeout(()=> { if (id) window.location.href = `/RefillTask/Details/${id}`; else location.reload(); }, 900);
              }
            } catch(e){
              showInlineAlert('error','🚨 Lỗi kết nối tới server.');
            } finally {
              $btn.disabled = false;
              $btn.innerHTML = oldHtml;
            }
          }

          $btn?.addEventListener('click', assignTask);
        })();
    </script>
}
