@model Madehuman_Share.ViewModel.Inbound.RefillScanPageViewModel

@{
    ViewData["Title"] = "Refill";
    var detail = Model.TaskDetailFlat;
    var scan = Model.ScanRequest;
}

<div class="container mt-4">
    <h3 class="text-primary mb-3">🛠️ Xác nhận nhiệm vụ bổ sung kho</h3>

    <div class="row">
        <!-- Bên trái: Thông tin sản phẩm -->
        <div class="col-md-6">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title text-primary">📦 Thông tin chi tiết</h5>
                    <p><strong>Người tạo:</strong> @detail.CreateBy</p>
                    <p><strong>Thời gian:</strong> @detail.CreateAt.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>SKU:</strong> @detail.SKU</p>
                    <p><strong>Số lượng:</strong> @detail.Quantity</p>
                    <p><strong>Vị trí lấy hàng:</strong> @scan.FromLocationName</p>
                    <p><strong>Vị trí bổ sung:</strong> @scan.ToLocationName</p>
                </div>
            </div>
        </div>

        <!-- Bên phải: Quét mã và kết quả -->
        <div class="col-md-6">
            <div class="card shadow-sm p-4">
                @Html.AntiForgeryToken()

                <!-- Hidden fields để gửi dữ liệu -->
                <input type="hidden" id="RefillTaskId" value="@scan.RefillTaskId" />
                <input type="hidden" id="RefillTaskDetailId" value="@scan.RefillTaskDetailId" />
                <input type="hidden" id="FromLocationName" value="@scan.FromLocationName" />
                <input type="hidden" id="ToLocationName" value="@scan.ToLocationName" />
                <input type="hidden" id="SKU" value="@scan.SKU" />
                <input type="hidden" id="Quantity" value="@scan.Quantity" />

                <div class="mb-3">
                    <label for="scanInput" class="form-label fw-bold">🔍 Quét mã từng bước</label>
                    <input type="text" id="scanInput" class="form-control form-control-lg" placeholder="Bước 1: Vị trí lấy → Bước 2: SKU → Bước 3: Vị trí đích" autofocus />
                </div>

                <div id="result" class="alert d-none mt-3"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let step = 1;
        let qtyScanned = 0;

        const fromLocation = "@scan.FromLocationName";
        const toLocation = "@scan.ToLocationName";
        const sku = "@scan.SKU";
        const refillTaskId = "@scan.RefillTaskId";
        const refillTaskDetailId = "@scan.RefillTaskDetailId";

        const input = document.getElementById("scanInput");
        const resultBox = document.getElementById("result");

        const successSFX = new Audio("/sounds/success.mp3");
        const errorSFX = new Audio("/sounds/error.mp3");

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        function updatePlaceholder() {
            if (step === 1) input.placeholder = "🔍 Quét mã vị trí lấy hàng...";
            else if (step === 2) input.placeholder = "🔍 Quét mã SKU...";
            else if (step === 3) input.placeholder = "🔢 Nhập số lượng cần bổ sung...";
            else if (step === 4) input.placeholder = "📍 Quét vị trí bổ sung...";
        }

        function showSuccess(msg) {
            resultBox.className = "alert alert-success";
            resultBox.innerHTML = msg;
            resultBox.classList.remove("d-none");
            successSFX.play();
        }

        function showError(msg) {
            resultBox.className = "alert alert-danger";
            resultBox.innerHTML = msg;
            resultBox.classList.remove("d-none");
            errorSFX.play();
        }

        updatePlaceholder();

        input.addEventListener("keypress", async function (e) {
            if (e.key !== "Enter") return;
            const value = input.value.trim();
            input.value = "";
            if (!value) return;

            if (step === 1) {
                if (value === fromLocation) {
                    step = 2;
                    showSuccess("✅ Vị trí lấy hàng đúng. Quét SKU tiếp theo.");
                    updatePlaceholder();
                } else {
                    showError("❌ Sai vị trí lấy hàng.");
                }
            } else if (step === 2) {
                if (value === sku) {
                    step = 3;
                    showSuccess("✅ SKU đúng. Nhập số lượng cần bổ sung.");
                    updatePlaceholder();
                } else {
                    showError("❌ Sai SKU.");
                }
            } else if (step === 3) {
                const parsedQty = parseInt(value);
                if (isNaN(parsedQty) || parsedQty <= 0) {
                    showError("❌ Số lượng không hợp lệ.");
                } else {
                    qtyScanned = parsedQty;
                    step = 4;
                    showSuccess(`✅ Nhập ${qtyScanned} thành công. Quét vị trí bổ sung.`);
                    updatePlaceholder();
                }
            } else if (step === 4) {
                if (value === toLocation) {
                    const jwt = getCookie("JWTToken");

                    const data = {
                        RefillTaskId: refillTaskId,
                        RefillTaskDetailId: refillTaskDetailId,
                        FromLocationName: fromLocation,
                        ToLocationName: toLocation,
                        SKU: sku,
                        Quantity: qtyScanned
                    };

                    try {
                        const res = await fetch("https://localhost:7204/api/RefillTask/validate-scan", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "Authorization": `Bearer ${jwt}`
                            },
                            body: JSON.stringify(data)
                        });

                        const body = await res.json();

                        if (res.ok) {
                            showSuccess(body?.find(m => m.includes("✅")) ?? "✅ Xác nhận thành công.");

                            setTimeout(() => {
                                window.location.href = "https://localhost:7112/RefillTask/DetailFlat";
                            }, 1500);
                        } else {
                            showError(body?.join("<br>") ?? "❌ Xác nhận thất bại.");
                        }

                        step = 1;
                        qtyScanned = 0;
                        updatePlaceholder();
                    } catch {
                        showError("❌ Lỗi kết nối tới server.");
                    }
                } else {
                    showError("❌ Sai vị trí bổ sung.");
                }
            }

        });
    </script>
}
