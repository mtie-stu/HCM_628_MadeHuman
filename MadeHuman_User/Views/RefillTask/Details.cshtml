@using Madehuman_Share.ViewModel.Inbound
@model RefillTaskFullViewModel

@{
    ViewData["Title"] = "Refill";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var totalItems = Model?.Details?.Count ?? 0;
    var sumQty = Model?.Details?.Sum(d => d.Quantity) ?? 0;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="~/css/pages/Refill/refill-details.css" asp-append-version="true" />

<div class="refill-page">
    <div class="container mt-4">

        <!-- Header -->
        <div class="page-head">
            <div>
                <h2 class="page-title mb-1"><i class="bi bi-clipboard-data"></i> Chi tiết nhiệm vụ bổ sung kho</h2>
                <div class="code-chip" title="Nhấp để sao chép" id="taskIdChip">
                    <i class="bi bi-hash"></i> @Model.Id
                    <button type="button" class="btn btn-sm p-0 border-0 bg-transparent ms-1" id="copyTaskIdBtn" aria-label="Copy">
                        <i class="bi bi-clipboard"></i>
                    </button>
                </div>
            </div>
            <div class="d-flex gap-2">
                <a href="/RefillTask/DetailFlat" class="btn btn-orange" id="startBtn">
                    <i class="bi bi-person-check-fill me-1"></i> Bắt đầu nhiệm vụ
                </a>
                <a asp-action="Index" class="btn btn-outline">
                    <i class="bi bi-arrow-left-circle me-1"></i> Quay lại
                </a>
            </div>
        </div>

        <!-- Info card -->
        <div class="card shadow-sm mb-3">
            <div class="card-body">
                <h5 class="card-title mb-3">📄 Thông tin nhiệm vụ</h5>

                <div class="stat-row">
                    <div class="stat-pill"><i class="bi bi-list-check me-1"></i> Số dòng: <strong>@totalItems</strong></div>
                    <div class="stat-pill"><i class="bi bi-hash me-1"></i> Tổng SL: <strong>@sumQty</strong></div>
                    <div class="stat-pill"><i class="bi bi-calendar-event me-1"></i> @Model.CreateAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>

                <div class="info-grid">
                    <div class="label"><i class="bi bi-person-circle me-1"></i>Người tạo</div>
                    <div>@Model.CreateBy</div>

                    @if (Model.LowStockId != null)
                    {
                        <div class="label"><i class="bi bi-exclamation-circle me-1"></i>LowStock ID</div>
                        <div>
                            <span class="code-chip">@Model.LowStockId</span>
                        </div>
                    }
                    @if (Model.UserTaskId != null)
                    {
                        <div class="label"><i class="bi bi-person-workspace me-1"></i>UserTask ID</div>
                        <div>
                            <span class="code-chip">@Model.UserTaskId</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Details table -->
        <h5 class="mb-2 text-secondary"><i class="bi bi-list-check"></i> Danh sách chi tiết</h5>
        <div class="table-responsive">
            <table class="table table-bordered table-hover table-sm align-middle">
                <thead class="table-light">
                    <tr>
                        <th class="th-muted"><i class="bi bi-upc-scan"></i> SKU</th>
                        <th class="th-muted"><i class="bi bi-box-arrow-in-left"></i> From</th>
                        <th class="th-muted"><i class="bi bi-box-arrow-right"></i> To</th>
                        <th class="th-muted text-end"><i class="bi bi-hash"></i> Số lượng</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var d in Model.Details)
                    {
                        var sku = d.SKU ?? d.ProductSKUId?.ToString();
                        var fromName = d.FromLocationName ?? d.FromLocation.ToString();
                        var toName = d.ToLocationName ?? d.ToLocation.ToString();
                        <tr>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(sku))
                                {
                                    <span class="sku-chip">@sku</span>
                                }
                            </td>
                            <td><span class="loc-chip"><i class="bi bi-geo-alt"></i> @fromName</span></td>
                            <td><span class="loc-chip"><i class="bi bi-geo"></i> @toName</span></td>
                            <td class="text-end qty">@d.Quantity</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

    <!-- inline alert -->
    <div id="inlineAlert" class="inline-alert d-none"></div>
</div>
@section Scripts {
    <script>
        (function(){
          const $alert = document.getElementById('inlineAlert');
          function showInline(type, text){
            $alert.className = 'inline-alert ' + (type==='success'?'success':'error');
            $alert.textContent = text;
            $alert.classList.remove('d-none');
            requestAnimationFrame(()=> $alert.classList.add('show'));
            setTimeout(()=> {
              $alert.classList.remove('show');
              setTimeout(()=> $alert.classList.add('d-none'), 200);
            }, 2000);
          }

          // Copy TaskId
          const copyBtn = document.getElementById('copyTaskIdBtn');
          if (copyBtn){
            copyBtn.addEventListener('click', async ()=>{
              const idText = copyBtn.parentElement?.textContent?.trim() ?? '';
              const toCopy = idText.replace(/^#?\s*/,'').replace(/\s*Copy$/,'');
              try{
                await navigator.clipboard.writeText(toCopy);
                showInline('success','📋 Đã sao chép mã nhiệm vụ');
              }catch{
                showInline('error','❌ Không sao chép được');
              }
            });
          }

          // Spinner khi bắt đầu
          const startBtn = document.getElementById('startBtn');
          if (startBtn){
            startBtn.addEventListener('click', (e)=>{
              // tránh spam click
              if (startBtn.dataset.loading === '1') { e.preventDefault(); return; }
              startBtn.dataset.loading = '1';
              startBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang mở trang...';
            });
          }
        })();
    </script>
}
