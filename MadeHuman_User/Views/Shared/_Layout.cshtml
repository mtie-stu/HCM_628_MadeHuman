@{
    Layout = null;

    string currentController = ViewContext.RouteData.Values["Controller"]?.ToString();
    string currentAction = ViewContext.RouteData.Values["Action"]?.ToString();

    string IsActive(string controller, string action)
    {
        return (currentController == controller && currentAction == action)
            ? "bg-orange-100 text-orange-600 font-semibold"
            : "text-gray-600 hover:bg-gray-100";
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - MadeHuman_User</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <style>
        ::-webkit-scrollbar {
            width: 6px;
        }
        ::-webkit-scrollbar-thumb {
            background-color: #d6d3d1;
            border-radius: 3px;
        }
    </style>
</head>
<body class="bg-[#f1f5f9] min-h-screen flex flex-col font-sans text-base text-black">
    <!-- Top bar -->
    <header class="flex items-center justify-between bg-white px-8 py-5 shadow">
        <div class="flex items-center space-x-4">
            <img src="https://storage.googleapis.com/a1aa/image/77806709-391a-489f-73cd-6465f3e28dfb.jpg"
                 alt="Profile picture"
                 class="w-14 h-14 rounded-full object-cover shadow" />
            <span class="text-lg font-bold">Nguyễn Văn A</span>
        </div>
        @* <div class="flex-1 max-w-xl mx-10">
            <input type="text"
                   placeholder="Tìm kiếm nhanh..."
                   class="w-full px-4 py-2 text-sm text-gray-700 bg-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-400" />
        </div> *@
        <div>
            <button aria-label="Notifications" class="relative text-orange-500 text-2xl">
                <i class="fas fa-bell"></i>
            </button>
        </div>
    </header>

    <!-- Layout -->
    <main class="flex flex-1 px-10 py-8 gap-8">
         <!-- Sidebar -->
        <aside class="flex flex-col justify-between bg-white rounded-2xl w-64 py-8 px-6 shadow-lg">
            <nav class="space-y-4 text-[15px] font-medium">
                <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 @IsActive("Home", "Index")"
                   asp-controller="Home" asp-action="Index">
                    <i class="fas fa-th-large"></i> <span>Dashboard</span>
                </a>

                <!-- InBound Dropdown -->
                <div class="relative mt-2">
                    <button type="button" onclick="toggleDropdown('inboundDropdown')"
                            class="flex items-center gap-4 px-4 py-3 w-full rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100">
                        <i class="fas fa-download"></i> <span>InBound</span>
                        <i class="fas fa-chevron-down ml-auto text-xs text-gray-400"></i>
                    </button>
                    <div id="inboundDropdown" class="hidden ml-6 mt-2 space-y-2 text-sm">
                        <a asp-controller="Inbound" asp-action="Import"
                           class="block px-3 py-2 rounded-lg transition-all duration-200 @IsActive("Inbound", "Import") hover:bg-orange-50 hover:text-orange-600">
                            Import
                        </a>
                        <a asp-controller="Inbound" asp-action="Export"
                           class="block px-3 py-2 rounded-lg transition-all duration-200 @IsActive("Inbound", "Export") hover:bg-orange-50 hover:text-orange-600">
                            Export
                        </a>
                    </div>
                </div>



                <!-- OutBound Dropdown -->
                <div class="relative mt-2">
                    <button type="button" onclick="toggleDropdown('outboundDropdown')"
                            class="flex items-center gap-4 px-4 py-3 w-full rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100">
                        <i class="fas fa-upload"></i> <span>OutBound</span>
                        <i class="fas fa-chevron-down ml-auto text-xs text-gray-400"></i>
                    </button>

                    <!-- OutBound children -->
                    <div id="outboundDropdown" class="hidden ml-6 mt-2 space-y-2 text-sm">

                        <a asp-controller="Outbound" asp-action="Picker"
                           class="block px-3 py-2 rounded-lg hover:bg-orange-50 hover:text-orange-600">Picker</a>

                        <!-- Checker Dropdown inside OutBound -->
                        <div class="relative">
                            <button type="button" onclick="toggleDropdown('checkerSubDropdown')"
                                    class="flex items-center w-full px-3 py-2 rounded-lg hover:bg-orange-50 hover:text-orange-600">
                                Checker
                                <i class="fas fa-chevron-down ml-auto text-xs text-gray-400"></i>
                            </button>
                            <div id="checkerSubDropdown" class="hidden ml-4 mt-1 space-y-2">
                                <a asp-controller="Outbound" asp-action="CheckerTaskMix"
                                   class="block px-3 py-2 rounded-lg hover:bg-orange-100 text-sm">Checker Task Mix</a>
                                <a asp-controller="Outbound" asp-action="CheckerTaskSingle"
                                   class="block px-3 py-2 rounded-lg hover:bg-orange-100 text-sm">Checker Task Single</a>
                            </div>
                        </div>

                        <a asp-controller="Outbound" asp-action="Packer"
                           class="block px-3 py-2 rounded-lg hover:bg-orange-50 hover:text-orange-600">Packer</a>

                        <a asp-controller="Outbound" asp-action="Dispatch"
                           class="block px-3 py-2 rounded-lg hover:bg-orange-50 hover:text-orange-600">Dispatch</a>
                    </div>
                </div>

            <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100"
               asp-controller="Training" asp-action="Index">
                <i class="fas fa-tv"></i> <span>Training</span>
            </a>

            <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100"
               asp-controller="Attendance" asp-action="CheckInOut">
                <i class="fas fa-hourglass-half"></i> <span>Check In/Out</span>
            </a>

            <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100"
               asp-controller="Report" asp-action="Index">
                <i class="fas fa-comment-alt"></i> <span>Reports</span>
            </a>

@*             <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 text-gray-600 hover:bg-gray-100"
               asp-controller="Manager" asp-action="Index">
                <i class="fas fa-building"></i> <span>Manager</span>
            </a> *@

            <a class="flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-200 text-gray-400 hover:bg-gray-100"
               asp-controller="Support" asp-action="Help">
                <i class="fas fa-question"></i> <span>Help</span>
            </a>


            </nav>

            <div class="bg-white rounded-lg text-center py-4 mt-10 border-t">
                <p class="text-sm font-bold text-black">MADEHUMAN</p>
                <p class="text-xs text-gray-400 mt-1">Version: 1.0.0</p>
            </div>
        </aside>


        <!-- Main content -->
        <section class="flex-1 bg-white rounded-3xl p-10 shadow-md overflow-auto">
            <h1 class="text-4xl font-extrabold mb-8">@ViewData["Title"]</h1>
            @RenderBody()
        </section>
    </main>

    @await RenderSectionAsync("Scripts", required: false)
    <script>
        function toggleDropdown(id) {
            const dropdown = document.getElementById(id);
            const isHidden = dropdown.classList.contains('hidden');

            // Đóng các dropdown ở cùng cấp, nhưng không ảnh hưởng đến nested dropdown
            document.querySelectorAll('[data-dropdown-group]').forEach(el => {
                if (el.id !== id && !el.closest(`#${id}`)) {
                    el.classList.add('hidden');
                }
            });

            if (isHidden) {
                dropdown.classList.remove('hidden');
            } else {
                dropdown.classList.add('hidden');
            }
        }

        // Đóng dropdown khi click ra ngoài (trừ phần tử trong dropdown hoặc nút toggle)
        window.addEventListener('click', function (e) {
            const isDropdownToggle = e.target.closest('button');
            const isInsideDropdown = e.target.closest('[data-dropdown-group]');

            if (!isDropdownToggle && !isInsideDropdown) {
                document.querySelectorAll('[data-dropdown-group]').forEach(el => el.classList.add('hidden'));
            }
        });
    </script>


</body>
</html>
