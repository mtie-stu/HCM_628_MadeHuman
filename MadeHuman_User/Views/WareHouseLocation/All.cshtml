@model IEnumerable<Madehuman_Share.ViewModel.WareHouse.WarehouseLocationViewModel>

@{
    ViewData["Title"] = "Warehouse Locations (All)";
    var currentPage = (int)(ViewBag.CurrentPage ?? 1);
    var totalPages  = (int)(ViewBag.TotalPages ?? 1);
    var searchTerm  = ViewBag.SearchTerm as string ?? "";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="~/css/pages/Warehouse/warehouse-index.css" asp-append-version="true" />

<div class="warehouse-page">
  <div class="container mt-4">

    <!-- Header -->
    <div class="page-head">
      <div>
        <h2 class="page-title"><i class="bi bi-geo-alt-fill"></i> Warehouse Locations (All)</h2>
        <div class="page-subtext">Danh sách toàn bộ location có lọc & phân trang.</div>
      </div>
    </div>

    <!-- Filter/Search -->
    <form asp-action="All" method="get" class="filter-row mb-3">
      <div class="with-icon">
        <i class="bi bi-search"></i>
        <input name="searchTerm" class="form-control" placeholder="Tìm theo tên/Zone/ID..." value="@searchTerm" />
      </div>

      <button class="btn btn-outline" type="submit">
        <i class="bi bi-filter-circle me-1"></i> Lọc
      </button>
      <a asp-action="All" class="btn btn-outline"><i class="bi bi-x-circle me-1"></i> Xoá lọc</a>
    </form>

    <!-- Table -->
    <div class="table-wrap">
      <table class="table table-hover align-middle">
        <thead>
          <tr>
            <th style="width: 40%">Tên vị trí</th>
            <th style="width: 30%">Zone</th>
            <th style="width: 15%">ID</th>
            <th style="width: 15%" class="text-end">Thao tác</th>
          </tr>
        </thead>
        <tbody>
          @if (Model == null || !Model.Any())
          {
            <tr>
              <td colspan="4">
                <div class="empty-state">
                  <i class="bi bi-emoji-frown"></i>
                  <div class="title">Chưa có dữ liệu</div>
                  <div class="desc">Hãy thay đổi bộ lọc hoặc tạo mới.</div>
                  <a asp-action="Create" class="btn btn-orange">
                    <i class="bi bi-plus-circle me-1"></i> Tạo vị trí
                  </a>
                </div>
              </td>
            </tr>
          }
          else
          {
            foreach (var x in Model)
            {
              <tr>
                <td>
                  <div class="fw-bold text-dark">@x.NameLocation</div>
                  <div class="small text-muted">Location</div>
                </td>
                <td>
                  <!-- rút gọn + copy -->
                  <span class="status-chip weak">
                    <i class="bi bi-box-seam me-1"></i>
                    <span class="id-chip" title="Bấm để copy">@x.ZoneId</span>
                  </span>
                </td>
                <td>
                  <!-- rút gọn + copy -->
                  <span class="id-chip" title="Bấm để copy">@x.Id</span>
                </td>
                <td class="text-end">
                  <a asp-action="Details" asp-route-id="@x.Id" class="btn btn-outline btn-sm">
                    <i class="bi bi-eye me-1"></i> Xem
                    </a>
                </td>
              </tr>
            }
          }
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    @if (totalPages > 1)
    {
      var window = 2;
      var start = Math.Max(1, currentPage - window);
      var end   = Math.Min(totalPages, currentPage + window);

      <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center flex-wrap mb-0">
          <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("All", new { page = 1,        searchTerm })" aria-label="First">&laquo;&laquo;</a>
          </li>
          <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("All", new { page = currentPage - 1, searchTerm })" aria-label="Previous">&laquo;</a>
          </li>

          @if (start > 1)
          {
            <li class="page-item"><a class="page-link" href="@Url.Action("All", new { page = 1, searchTerm })">1</a></li>
            @if (start > 2) { <li class="page-item disabled"><span class="page-link">…</span></li> }
          }

          @for (int i = start; i <= end; i++)
          {
            <li class="page-item @(i == currentPage ? "active" : "")">
              <a class="page-link" href="@Url.Action("All", new { page = i, searchTerm })">@i</a>
            </li>
          }

          @if (end < totalPages)
          {
            @if (end < totalPages - 1) { <li class="page-item disabled"><span class="page-link">…</span></li> }
            <li class="page-item"><a class="page-link" href="@Url.Action("All", new { page = totalPages, searchTerm })">@totalPages</a></li>
          }

          <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("All", new { page = currentPage + 1, searchTerm })" aria-label="Next">&raquo;</a>
          </li>
          <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("All", new { page = totalPages,      searchTerm })" aria-label="Last">&raquo;&raquo;</a>
          </li>
        </ul>
      </nav>
    }

    <div id="inlineAlert" class="inline-alert d-none"></div>
  </div>
</div>

@section Scripts {
<script>
(function(){
  const toast = document.getElementById('inlineAlert');

  function showToast(type, text){
    if (!toast) return;
    toast.className = 'inline-alert ' + (type==='success'?'success':'error');
    toast.textContent = text;
    toast.classList.remove('d-none');
    requestAnimationFrame(()=> toast.classList.add('show'));
    setTimeout(()=>{ toast.classList.remove('show'); setTimeout(()=> toast.classList.add('d-none'), 160); }, 1800);
  }

  // Rút gọn + copy cho .id-chip
  function shortenId(str){
    if (!str) return str;
    const s = String(str).trim();
    if (s.length >= 32) return s.slice(0,8) + '...' + s.slice(-8); // GUID
    if (s.length > 8)  return s.slice(0,4) + '...' + s.slice(-4);
    return s;
  }
  function enhanceIdChips(root=document){
    root.querySelectorAll('.id-chip').forEach(chip=>{
      const full = (chip.getAttribute('data-guid') || chip.textContent || '').trim();
      if (!full) return;
      chip.setAttribute('data-guid', full);
      chip.textContent = shortenId(full);
      chip.title = chip.title || 'Bấm để copy';
      chip.classList.add('copy-guid');
      chip.style.cursor = 'pointer';
    });
  }
  document.addEventListener('click', function(e){
    const el = e.target.closest('.copy-guid');
    if (!el) return;
    e.preventDefault(); e.stopPropagation();
    const full = el.getAttribute('data-guid'); if (!full) return;

    if (navigator.clipboard?.writeText) {
      navigator.clipboard.writeText(full)
        .then(()=> showToast('success','✅ Đã copy đầy đủ mã'))
        .catch(()=> showToast('error','❌ Không thể copy.'));
    } else {
      const ta = document.createElement('textarea');
      ta.value = full; ta.style.position='fixed'; ta.style.opacity='0';
      document.body.appendChild(ta); ta.select();
      try { document.execCommand('copy'); showToast('success','✅ Đã copy đầy đủ mã'); }
      catch { showToast('error','❌ Không thể copy.'); }
      finally { document.body.removeChild(ta); }
    }
  });

  enhanceIdChips();
})();
</script>
}
